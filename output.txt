   Compiling tinystore v0.1.0 (/home/raine/tinystore)
warning: denote infinite loops with `loop { ... }`
  --> src/btree/ops.rs:60:5
   |
60 |     while true {
   |     ^^^^^^^^^^ help: use `loop`
   |
   = note: `#[warn(while_true)]` on by default

warning: unused import: `prev_iter::PrevPeekable`
 --> src/btree/node.rs:1:5
  |
1 | use prev_iter::PrevPeekable;
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `warn`
 --> src/btree/node.rs:2:17
  |
2 | use log::{info, warn};
  |                 ^^^^

warning: unused import: `PAGE_SIZE`
 --> src/btree/node.rs:7:9
  |
7 |         PAGE_SIZE
  |         ^^^^^^^^^

error[E0599]: no method named `next_ptr` found for struct `FreeBlock` in the current scope
   --> src/btree/node.rs:211:53
    |
57  | pub struct FreeBlock {
    | -------------------- method `next_ptr` not found for this struct
...
211 |                     &prev_vec[update_block_index-1].next_ptr()
    |                                                     ^^^^^^^^-- help: remove the arguments
    |                                                     |
    |                                                     field, not a method

warning: unused variable: `config`
  --> src/connection.rs:28:34
   |
28 |     pub fn open(db_path : &Path, config : Config) -> std::io::Result<Connection> {
   |                                  ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `first_page`
  --> src/connection.rs:44:14
   |
44 |         let (first_page, bytes_read) = self.pager.get_page(0)?;
   |              ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_first_page`

warning: unused variable: `db_path`
  --> src/connection.rs:43:37
   |
43 |     fn try_initialize_db(&mut self, db_path : &Path) -> std::io::Result<()> {
   |                                     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_db_path`

warning: variable does not need to be mutable
  --> src/connection.rs:48:17
   |
48 |             let mut header_slice = &mut payload[..DB_HEADER_SIZE];
   |                 ----^^^^^^^^^^^^
   |                 |
   |                 help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> src/btree/ops.rs:26:9
   |
26 |     let mut root_header = NodeHeader::get(NodeType::Leaf, (DB_HEADER_SIZE+NODE_HEADER_SIZE) as u32, PAGE_SIZE as u32, 0);
   |         ----^^^^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/btree/ops.rs:33:19
   |
33 | pub fn get_record(mut key : Vec<u8>, pager : &mut Pager) -> std::io::Result<Vec<u8>> {
   |                   ----^^^
   |                   |
   |                   help: remove this `mut`

warning: variable does not need to be mutable
  --> src/btree/ops.rs:34:9
   |
34 |     let mut node = search(&key, pager)?;
   |         ----^^^^
   |         |
   |         help: remove this `mut`

warning: unused variable: `key_size`
   --> src/btree/ops.rs:107:9
    |
107 |     let key_size = key.len() as u32;
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_key_size`

warning: unused variable: `value_size`
   --> src/btree/ops.rs:108:9
    |
108 |     let value_size = value.len() as u32;
    |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_value_size`

warning: variable does not need to be mutable
  --> src/btree/ops.rs:91:22
   |
91 | pub fn insert_record(mut key : Vec<u8>, mut value : Vec<u8>, pager : &mut Pager) -> std::io::Result<()> {
   |                      ----^^^
   |                      |
   |                      help: remove this `mut`

warning: variable does not need to be mutable
  --> src/btree/ops.rs:91:41
   |
91 | pub fn insert_record(mut key : Vec<u8>, mut value : Vec<u8>, pager : &mut Pager) -> std::io::Result<()> {
   |                                         ----^^^^^
   |                                         |
   |                                         help: remove this `mut`

warning: unused variable: `free_space_start`
   --> src/btree/ops.rs:161:13
    |
161 |         let free_space_start = NODE_HEADER_SIZE + (4*to_move);
    |             ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_free_space_start`

warning: unused variable: `bytes_read`
   --> src/btree/node.rs:123:27
    |
123 |         let (page_buffer, bytes_read) = pager.get_page(page_id)?;
    |                           ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_bytes_read`

warning: unused variable: `bytes_decoded`
   --> src/btree/node.rs:150:31
    |
150 |         let (mut node_header, bytes_decoded) : (NodeHeader, usize) = bincode::decode_from_slice(
    |                               ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_bytes_decoded`

warning: variable does not need to be mutable
   --> src/btree/node.rs:150:14
    |
150 |         let (mut node_header, bytes_decoded) : (NodeHeader, usize) = bincode::decode_from_slice(
    |              ----^^^^^^^^^^^
    |              |
    |              help: remove this `mut`

warning: unused variable: `page_id`
  --> src/btree/entry.rs:14:38
   |
14 |             DataEntry::Internal(key, page_id) => (8 + key.len()) as u32
   |                                      ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_page_id`

For more information about this error, try `rustc --explain E0599`.
warning: `tinystore` (lib) generated 20 warnings
error: could not compile `tinystore` (lib) due to 1 previous error; 20 warnings emitted
